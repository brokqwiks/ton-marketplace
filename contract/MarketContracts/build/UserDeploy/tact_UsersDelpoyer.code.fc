#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_UsersDelpoyer.headers.fc";
#include "tact_UsersDelpoyer.stdlib.fc";
#include "tact_UsersDelpoyer.storage.fc";

;;
;; Contract UsersDelpoyer functions
;;

(slice, int) $UsersDelpoyer$_contract_init(slice $name) impure inline_ref {
    var (($self'name, $self'users)) = (null(), 0);
    $self'name = $name;
    return ($self'name, $self'users);
}

((slice, int), slice) $UsersDelpoyer$_fun_myAddress((slice, int) $self) impure inline_ref {
    var (($self'name, $self'users)) = $self;
    return (($self'name, $self'users), my_address());
}

((slice, int), int) $UsersDelpoyer$_fun_totalUsers((slice, int) $self) impure inline_ref {
    var (($self'name, $self'users)) = $self;
    return (($self'name, $self'users), $self'users);
}

((slice, int), slice) $UsersDelpoyer$_fun_userContractAddress((slice, int) $self, slice $userAddress) impure inline_ref {
    var (($self'name, $self'users)) = $self;
    var ($init'code, $init'data) = $UserData$_init_child(__tact_context_sys, $userAddress, my_address());
    slice $userContractAddress = $global_contractAddress(($init'code, $init'data));
    return (($self'name, $self'users), $userContractAddress);
}

;;
;; Receivers of a Contract UsersDelpoyer
;;

(((slice, int)), ()) $UsersDelpoyer$_internal_binary_DeployUser((slice, int) $self, (slice) $msg) impure inline {
    var ($self'name, $self'users) = $self;
    var ($msg'publicKey) = $msg;
    $self'users = ($self'users + 1);
    var ($init'code, $init'data) = $UserData$_init_child(__tact_context_sys, __tact_context_get_sender(), my_address());
    slice $userContractAddress = $global_contractAddress(($init'code, $init'data));
    $global_send($SendParameters$_constructor_body_to_value_mode_code_data($UpdateUserPublicKey$_store_cell($UpdateUserPublicKey$_constructor_publicKey_sender($msg'publicKey, __tact_context_get_sender())), $userContractAddress, 200000000, 2, $init'code, $init'data));
    ($self'name, $self'users)~$UsersDelpoyer$_fun_reply($UpdateUserPublicKey_Responce$_store_cell($UpdateUserPublicKey_Responce$_constructor_updated_sender(true, __tact_context_get_sender())));
    return (($self'name, $self'users), ());
}

(((slice, int)), ()) $UsersDelpoyer$_internal_binary_Deploy((slice, int) $self, (int) $deploy) impure inline {
    var ($self'name, $self'users) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'name, $self'users)~$UsersDelpoyer$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'name, $self'users), ());
}

;;
;; Get methods of a Contract UsersDelpoyer
;;

_ %myAddress() method_id(77701) {
    var self = $UsersDelpoyer$_contract_load();
    var res = self~$UsersDelpoyer$_fun_myAddress();
    return res;
}

_ %totalUsers() method_id(85436) {
    var self = $UsersDelpoyer$_contract_load();
    var res = self~$UsersDelpoyer$_fun_totalUsers();
    return res;
}

_ %userContractAddress(slice $$userAddress) method_id(126548) {
    slice $userAddress = __tact_verify_address($$userAddress);
    var self = $UsersDelpoyer$_contract_load();
    var res = self~$UsersDelpoyer$_fun_userContractAddress($userAddress);
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://Qmf7opgJyjhPZUHeBZ8zE8nRbkYm1mbJbegnAHYdXwfyF1";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract UsersDelpoyer
;;

((slice, int), int) $UsersDelpoyer$_contract_router_internal((slice, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive DeployUser message
    if (op == 1212914039) {
        var msg = in_msg~$DeployUser$_load();
        self~$UsersDelpoyer$_internal_binary_DeployUser(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$UsersDelpoyer$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $UsersDelpoyer$_contract_load();
    
    ;; Handle operation
    int handled = self~$UsersDelpoyer$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $UsersDelpoyer$_contract_store(self);
}
